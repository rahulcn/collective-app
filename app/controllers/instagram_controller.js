// Generated by CoffeeScript 2.0.0-beta8
ApplicationController.controller('InstagramController', function ($scope, $location, instagramAPI, $routeParams, $timeout) {
  $scope.setActive([
    'instagram',
    $routeParams.filter
  ]);
  $scope.service = new instagramAPI($routeParams);
  switch ($routeParams.filter) {
  case 'follows':
    $scope.service.fetchUsers();
    break;
  case 'followed-by':
    $scope.service.fetchUsers();
    break;
  default:
    $scope.service.firstPage();
  }
  $scope.popHeart = function (event) {
    var create, i, margin, popSize, position, teaserSize, total;
    this.elem = $(event.target);
    popSize = [
      50,
      40
    ];
    teaserSize = [
      24,
      24
    ];
    margin = 14 / 2;
    i = 0;
    total = 14 * 2;
    position = function (this$) {
      return function (heart, size) {
        var maxX, maxY, minX, minY, w;
        w = this$.elem.parent();
        minX = w.scrollLeft() + margin;
        maxX = w.scrollLeft() + w.width() - size[0] - margin;
        minY = w.scrollTop() + margin;
        maxY = w.scrollTop() + w.height() - size[1] - margin;
        heart.css('left', Math.round(minX + Math.random() * (maxX - minX)) + 'px');
        heart.css('top', Math.round(minY + Math.random() * (maxY - minY)) + 'px');
      };
    }(this);
    create = function (this$) {
      return function () {
        var heart;
        ++i;
        heart = $('<div class="heart heart-active pop"></div>');
        heart.bind('animationend oanimationend MSAnimationEnd ' + 'mozAnimationEnd webkitAnimationEnd', function () {
          $(this).remove();
        });
        position(heart, popSize);
        heart.appendTo(this$.elem.parent());
        if (i < total)
          setTimeout(create, Math.random() * 250);
      };
    }(this);
    create();
  };
});
